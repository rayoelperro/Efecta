{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1","program":"/home/alberto/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ansi_term","/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=ee804cd3742b1de4","-C","extra-filename=-ee804cd3742b1de4","--out-dir","/home/alberto/Documentos/Proyects/Rust/Efecta/target/rls/debug/deps","-L","dependency=/home/alberto/Documentos/Proyects/Rust/Efecta/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/alberto/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/alberto/Documentos/Proyects/Rust/Efecta/target/rls/debug/deps/libansi_term-ee804cd3742b1de4.rmeta"},"prelude":{"crate_id":{"name":"ansi_term","disambiguator":[12434217700992453373,15611807640324784678]},"crate_root":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src","external_crates":[{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}}],"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":0,"byte_end":10025,"line_start":1,"line_end":271,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9756,"byte_end":9762,"line_start":251,"line_end":251,"column_start":16,"column_end":22},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9764,"byte_end":9769,"line_start":251,"line_end":251,"column_start":24,"column_end":29},"alias_span":null,"name":"Infix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9771,"byte_end":9777,"line_start":251,"line_end":251,"column_start":31,"column_end":37},"alias_span":null,"name":"Suffix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9808,"byte_end":9814,"line_start":254,"line_end":254,"column_start":17,"column_end":23},"alias_span":null,"name":"Colour","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9816,"byte_end":9821,"line_start":254,"line_end":254,"column_start":25,"column_end":30},"alias_span":null,"name":"Style","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9873,"byte_end":9879,"line_start":257,"line_end":257,"column_start":9,"column_end":15},"alias_span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9883,"byte_end":9888,"line_start":257,"line_end":257,"column_start":19,"column_end":24},"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9937,"byte_end":9938,"line_start":261,"line_end":261,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9983,"byte_end":9984,"line_start":266,"line_end":266,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":10011,"byte_end":10012,"line_start":269,"line_end":269,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":0,"byte_end":10025,"line_start":1,"line_end":271,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":87},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":194},{"krate":0,"index":195}],"decl_id":null,"docs":" This is a library for controlling colours and formatting, such as\n red bold text or blue underlined text, on ANSI terminals.","sig":null,"attributes":[{"value":"crate_name = \"ansi_term\"","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9346,"byte_end":9374,"line_start":232,"line_end":232,"column_start":1,"column_end":29}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9375,"byte_end":9398,"line_start":233,"line_end":233,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9399,"byte_end":9423,"line_start":234,"line_end":234,"column_start":1,"column_end":25}},{"value":"warn(missing_copy_implementations)","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9425,"byte_end":9463,"line_start":236,"line_end":236,"column_start":1,"column_end":39}},{"value":"warn(missing_docs)","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9464,"byte_end":9486,"line_start":237,"line_end":237,"column_start":1,"column_end":23}},{"value":"warn(trivial_casts, trivial_numeric_casts)","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9487,"byte_end":9533,"line_start":238,"line_end":238,"column_start":1,"column_end":47}},{"value":"warn(unused_extern_crates, unused_qualifications)","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/lib.rs","byte_start":9534,"byte_end":9587,"line_start":239,"line_end":239,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":201},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":14329,"byte_end":14335,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::ansi::Prefix","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like `ANSIString`, but only displays the style prefix.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":14318,"byte_end":14343,"line_start":122,"line_end":122,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":14741,"byte_end":14746,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Infix","qualname":"::ansi::Infix","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like `ANSIString`, but only displays the difference between two\n styles.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":14730,"byte_end":14761,"line_start":132,"line_end":132,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":218},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":15140,"byte_end":15146,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"Suffix","qualname":"::ansi::Suffix","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like `ANSIString`, but only displays the style suffix.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":15129,"byte_end":15154,"line_start":141,"line_end":141,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":15790,"byte_end":15796,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Style>::prefix","value":"fn (self) -> Prefix","parent":null,"children":[],"decl_id":null,"docs":" The prefix bytes for this style. These are the bytes that tell the\n terminal to use a different colour or font style.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":16602,"byte_end":16607,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"infix","qualname":"<Style>::infix","value":"fn (self, next: Style) -> Infix","parent":null,"children":[],"decl_id":null,"docs":" The infix bytes between this style and `next` style. These are the bytes\n that tell the terminal to change the style to `next`. These may include\n a reset followed by the next colour and style, depending on the two styles.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":17302,"byte_end":17308,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"suffix","qualname":"<Style>::suffix","value":"fn (self) -> Suffix","parent":null,"children":[],"decl_id":null,"docs":" The suffix for this style. These are the bytes that tell the terminal\n to reset back to its normal colour and font style.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":17791,"byte_end":17797,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Colour>::prefix","value":"fn (self) -> Prefix","parent":null,"children":[],"decl_id":null,"docs":" The prefix bytes for this colour as a `Style`. These are the bytes\n that tell the terminal to use a different colour or font style.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":18329,"byte_end":18334,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"infix","qualname":"<Colour>::infix","value":"fn (self, next: Colour) -> Infix","parent":null,"children":[],"decl_id":null,"docs":" The infix bytes between this colour and `next` colour. These are the bytes\n that tell the terminal to use the `next` colour, or to do nothing if\n the two colours are equal.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":18841,"byte_end":18847,"line_start":271,"line_end":271,"column_start":12,"column_end":18},"name":"suffix","qualname":"<Colour>::suffix","value":"fn (self) -> Suffix","parent":null,"children":[],"decl_id":null,"docs":" The suffix for this colour as a `Style`. These are the bytes that\n tell the terminal to reset back to its normal colour and font style.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24491,"byte_end":24496,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Style","qualname":"::style::Style","value":"Style { foreground, background, is_bold, is_dimmed, is_italic, is_underline, is_blink, is_reverse, is_hidden, is_strikethrough }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"decl_id":null,"docs":" A style is a collection of properties that can format a string\n using ANSI escape codes.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24480,"byte_end":25222,"line_start":14,"line_end":45,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24562,"byte_end":24572,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"name":"foreground","qualname":"::style::Style::foreground","value":"std::option::Option<style::Colour>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The style's foreground colour, if it has one.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24653,"byte_end":24663,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"background","qualname":"::style::Style::background","value":"std::option::Option<style::Colour>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The style's background colour, if it has one.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24726,"byte_end":24733,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"is_bold","qualname":"::style::Style::is_bold","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether this style is bold.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":230},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24788,"byte_end":24797,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"name":"is_dimmed","qualname":"::style::Style::is_dimmed","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether this style is dimmed.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":231},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24852,"byte_end":24861,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"name":"is_italic","qualname":"::style::Style::is_italic","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether this style is italic.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":232},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24920,"byte_end":24932,"line_start":32,"line_end":32,"column_start":9,"column_end":21},"name":"is_underline","qualname":"::style::Style::is_underline","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether this style is underlined.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":233},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":24989,"byte_end":24997,"line_start":35,"line_end":35,"column_start":9,"column_end":17},"name":"is_blink","qualname":"::style::Style::is_blink","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether this style is blinking.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":234},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":25062,"byte_end":25072,"line_start":38,"line_end":38,"column_start":9,"column_end":19},"name":"is_reverse","qualname":"::style::Style::is_reverse","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether this style has reverse colours.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":235},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":25127,"byte_end":25136,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"name":"is_hidden","qualname":"::style::Style::is_hidden","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether this style is hidden.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":236},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":25198,"byte_end":25214,"line_start":44,"line_end":44,"column_start":9,"column_end":25},"name":"is_strikethrough","qualname":"::style::Style::is_strikethrough","value":"bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Whether this style is struckthrough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":25475,"byte_end":25478,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Style>::new","value":"fn () -> Style","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Style with no properties set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":25771,"byte_end":25775,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"bold","qualname":"<Style>::bold","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the bold property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":26094,"byte_end":26100,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"dimmed","qualname":"<Style>::dimmed","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the dimmed property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":26427,"byte_end":26433,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"italic","qualname":"<Style>::italic","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the italic property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":26768,"byte_end":26777,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"underline","qualname":"<Style>::underline","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the underline property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":27094,"byte_end":27099,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"blink","qualname":"<Style>::blink","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the blink property set.\n # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":27423,"byte_end":27430,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Style>::reverse","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the reverse property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":27753,"byte_end":27759,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"hidden","qualname":"<Style>::hidden","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the hidden property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":28093,"byte_end":28106,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"strikethrough","qualname":"<Style>::strikethrough","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the strikethrough property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":28464,"byte_end":28466,"line_start":184,"line_end":184,"column_start":12,"column_end":14},"name":"fg","qualname":"<Style>::fg","value":"fn (&self, foreground: Colour) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":28851,"byte_end":28853,"line_start":198,"line_end":198,"column_start":12,"column_end":14},"name":"on","qualname":"<Style>::on","value":"fn (&self, background: Colour) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the background colour property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":29300,"byte_end":29308,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"is_plain","qualname":"<Style>::is_plain","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Style` has no actual styles, and can be written\n without any control characters.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":244},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":30817,"byte_end":30822,"line_start":262,"line_end":262,"column_start":5,"column_end":10},"name":"Black","qualname":"::style::Colour::Black","value":"Colour::Black","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Colour #0 (foreground code `30`, background code `40`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":246},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":30893,"byte_end":30896,"line_start":265,"line_end":265,"column_start":5,"column_end":8},"name":"Red","qualname":"::style::Colour::Red","value":"Colour::Red","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Colour #1 (foreground code `31`, background code `41`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":248},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":30967,"byte_end":30972,"line_start":268,"line_end":268,"column_start":5,"column_end":10},"name":"Green","qualname":"::style::Colour::Green","value":"Colour::Green","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Colour #2 (foreground code `32`, background code `42`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":250},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":31043,"byte_end":31049,"line_start":271,"line_end":271,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::style::Colour::Yellow","value":"Colour::Yellow","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Colour #3 (foreground code `33`, background code `43`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":252},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":31120,"byte_end":31124,"line_start":274,"line_end":274,"column_start":5,"column_end":9},"name":"Blue","qualname":"::style::Colour::Blue","value":"Colour::Blue","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Colour #4 (foreground code `34`, background code `44`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":254},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":31195,"byte_end":31201,"line_start":277,"line_end":277,"column_start":5,"column_end":11},"name":"Purple","qualname":"::style::Colour::Purple","value":"Colour::Purple","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Colour #5 (foreground code `35`, background code `45`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":31272,"byte_end":31276,"line_start":280,"line_end":280,"column_start":5,"column_end":9},"name":"Cyan","qualname":"::style::Colour::Cyan","value":"Colour::Cyan","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Colour #6 (foreground code `36`, background code `46`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":31489,"byte_end":31494,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"White","qualname":"::style::Colour::White","value":"Colour::White","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Colour #7 (foreground code `37`, background code `47`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":260},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":32415,"byte_end":32420,"line_start":304,"line_end":304,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::style::Colour::Fixed","value":"Colour::Fixed(u8)","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" A colour number from 0 to 255, for use in 256-colour terminal\n environments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":32487,"byte_end":32490,"line_start":307,"line_end":307,"column_start":5,"column_end":8},"name":"RGB","qualname":"::style::Colour::RGB","value":"Colour::RGB(u8, u8, u8)","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" A 24-bit RGB color, as specified by ISO-8613-3.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":243},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":30579,"byte_end":30585,"line_start":256,"line_end":256,"column_start":10,"column_end":16},"name":"Colour","qualname":"::style::Colour","value":"Colour::{Black, Red, Green, Yellow, Blue, Purple, Cyan, White, Fixed, RGB}","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":263}],"decl_id":null,"docs":" A colour is one specific type of ANSI escape code, and can refer\n to either the foreground or background colour.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":30570,"byte_end":32505,"line_start":256,"line_end":308,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":32790,"byte_end":32796,"line_start":323,"line_end":323,"column_start":12,"column_end":18},"name":"normal","qualname":"<Colour>::normal","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":33185,"byte_end":33189,"line_start":338,"line_end":338,"column_start":12,"column_end":16},"name":"bold","qualname":"<Colour>::bold","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n bold property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":33598,"byte_end":33604,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"dimmed","qualname":"<Colour>::dimmed","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n dimmed property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":34019,"byte_end":34025,"line_start":368,"line_end":368,"column_start":12,"column_end":18},"name":"italic","qualname":"<Colour>::italic","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n italic property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":34450,"byte_end":34459,"line_start":383,"line_end":383,"column_start":12,"column_end":21},"name":"underline","qualname":"<Colour>::underline","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n underline property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":34872,"byte_end":34877,"line_start":398,"line_end":398,"column_start":12,"column_end":17},"name":"blink","qualname":"<Colour>::blink","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n blink property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":35290,"byte_end":35297,"line_start":413,"line_end":413,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Colour>::reverse","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n reverse property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":35709,"byte_end":35715,"line_start":428,"line_end":428,"column_start":12,"column_end":18},"name":"hidden","qualname":"<Colour>::hidden","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n hidden property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":36143,"byte_end":36156,"line_start":443,"line_end":443,"column_start":12,"column_end":25},"name":"strikethrough","qualname":"<Colour>::strikethrough","value":"fn (self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n strikethrough property set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":36625,"byte_end":36627,"line_start":458,"line_end":458,"column_start":12,"column_end":14},"name":"on","qualname":"<Colour>::on","value":"fn (self, background: Colour) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Style` with the foreground colour set to this colour and the\n background colour property set to the given colour.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":292},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":44991,"byte_end":45008,"line_start":16,"line_end":16,"column_start":12,"column_end":29},"name":"ANSIGenericString","qualname":"::display::ANSIGenericString","value":"ANSIGenericString {  }","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"decl_id":null,"docs":" An `ANSIGenericString` includes a generic string type and a `Style` to\n display that string.  `ANSIString` and `ANSIByteString` are aliases for\n this type on `str` and `\\[u8]`, respectively.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":47219,"byte_end":47229,"line_start":89,"line_end":89,"column_start":10,"column_end":20},"name":"ANSIString","qualname":"::display::ANSIString","value":"ANSIGenericString<'a, str>","parent":null,"children":[],"decl_id":null,"docs":" An ANSI String is a string coupled with the `Style` to display it\n in a terminal.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":104},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":47408,"byte_end":47422,"line_start":93,"line_end":93,"column_start":10,"column_end":24},"name":"ANSIByteString","qualname":"::display::ANSIByteString","value":"ANSIGenericString<'a, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" An `ANSIByteString` represents a formatted series of bytes.  Use\n `ANSIByteString` when styling text with an unknown encoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":47926,"byte_end":47935,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"style_ref","qualname":"<ANSIGenericString>::style_ref","value":"fn (&self) -> &Style","parent":null,"children":[],"decl_id":null,"docs":" Directly access the style\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":48035,"byte_end":48048,"line_start":115,"line_end":115,"column_start":12,"column_end":25},"name":"style_ref_mut","qualname":"<ANSIGenericString>::style_ref_mut","value":"fn (&mut self) -> &mut Style","parent":null,"children":[],"decl_id":null,"docs":" Directly access the style mutably\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":306},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":48467,"byte_end":48485,"line_start":133,"line_end":133,"column_start":12,"column_end":30},"name":"ANSIGenericStrings","qualname":"::display::ANSIGenericStrings","value":"","parent":null,"children":[],"decl_id":null,"docs":" A set of `ANSIGenericString`s collected together, in order to be\n written with a minimum of control characters.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":121},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":48738,"byte_end":48749,"line_start":139,"line_end":139,"column_start":10,"column_end":21},"name":"ANSIStrings","qualname":"::display::ANSIStrings","value":"ANSIGenericStrings<'a, str>","parent":null,"children":[],"decl_id":null,"docs":" A set of `ANSIString`s collected together, in order to be written with a\n minimum of control characters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":48873,"byte_end":48884,"line_start":143,"line_end":143,"column_start":8,"column_end":19},"name":"ANSIStrings","qualname":"::display::ANSIStrings","value":"fn <'a> (arg: &'a [ANSIString<'a>]) -> ANSIStrings<'a>","parent":null,"children":[],"decl_id":null,"docs":" A function to construct an `ANSIStrings` instance.\n","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":48841,"byte_end":48865,"line_start":142,"line_end":142,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":125},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49093,"byte_end":49108,"line_start":149,"line_end":149,"column_start":10,"column_end":25},"name":"ANSIByteStrings","qualname":"::display::ANSIByteStrings","value":"ANSIGenericStrings<'a, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" A set of `ANSIByteString`s collected together, in order to be\n written with a minimum of control characters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49237,"byte_end":49252,"line_start":153,"line_end":153,"column_start":8,"column_end":23},"name":"ANSIByteStrings","qualname":"::display::ANSIByteStrings","value":"fn <'a> (arg: &'a [ANSIByteString<'a>]) -> ANSIByteStrings<'a>","parent":null,"children":[],"decl_id":null,"docs":" A function to construct an `ANSIByteStrings` instance.\n","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49205,"byte_end":49229,"line_start":152,"line_end":152,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49490,"byte_end":49495,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"paint","qualname":"<Style>::paint","value":"fn <'a, I, S> (self, input: I) -> ANSIGenericString<'a, S>","parent":null,"children":[],"decl_id":null,"docs":" Paints the given text with this colour, returning an ANSI string.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49467,"byte_end":49478,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50094,"byte_end":50099,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"paint","qualname":"<Colour>::paint","value":"fn <'a, I, S> (self, input: I) -> ANSIGenericString<'a, S>","parent":null,"children":[],"decl_id":null,"docs":" Paints the given text with this colour, returning an ANSI string.\n This is a short-cut so you don’t have to use `Blue.normal()` just\n to get blue text.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50071,"byte_end":50082,"line_start":185,"line_end":185,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50778,"byte_end":50786,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"write_to","qualname":"<ANSIByteString>::write_to","value":"fn <W> (&self, w: &mut W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write an `ANSIByteString` to an `io::Write`.  This writes the escape\n sequences for the associated `Style` around the bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":51704,"byte_end":51712,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"write_to","qualname":"<ANSIByteStrings>::write_to","value":"fn <W> (&self, w: &mut W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write `ANSIByteStrings` to an `io::Write`.  This writes the minimal\n escape sequences for the associated `Style`s around each set of\n bytes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":169},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/write.rs","byte_start":53568,"byte_end":53572,"line_start":6,"line_end":6,"column_start":10,"column_end":14},"name":"wstr","qualname":"::write::AnyWrite::wstr","value":"type wstr: ?Sized;","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":170},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/write.rs","byte_start":53591,"byte_end":53596,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::write::AnyWrite::Error","value":"type Error;","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/util.rs","byte_start":56973,"byte_end":56983,"line_start":5,"line_end":5,"column_start":8,"column_end":18},"name":"sub_string","qualname":"::util::sub_string","value":"fn <'a> (start: usize, len: usize, strs: &ANSIStrings<'a>) -> Vec<ANSIString<'static>>","parent":null,"children":[],"decl_id":null,"docs":" Return a substring of the given ANSIStrings sequence, while keeping the formatting.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/util.rs","byte_start":57806,"byte_end":57813,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"unstyle","qualname":"::util::unstyle","value":"fn (strs: &ANSIStrings) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return a concatenated copy of `strs` without the formatting, as an allocated `String`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/util.rs","byte_start":58048,"byte_end":58060,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"unstyled_len","qualname":"::util::unstyled_len","value":"fn (strs: &ANSIStrings) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the unstyled length of ANSIStrings. This is equaivalent to `unstyle(strs).len()`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":10135,"byte_end":10140,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":12584,"byte_end":12590,"line_start":82,"line_end":82,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":15162,"byte_end":15167,"line_start":144,"line_end":144,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":17363,"byte_end":17369,"line_start":221,"line_end":221,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":18928,"byte_end":18934,"line_start":277,"line_end":277,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":19095,"byte_end":19100,"line_start":285,"line_end":285,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":19694,"byte_end":19700,"line_start":306,"line_end":306,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":25229,"byte_end":25234,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":29384,"byte_end":29389,"line_start":218,"line_end":218,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":32513,"byte_end":32519,"line_start":311,"line_end":311,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":36788,"byte_end":36793,"line_start":463,"line_end":463,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/difference.rs","byte_start":39270,"byte_end":39280,"line_start":23,"line_end":23,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":45463,"byte_end":45480,"line_start":34,"line_end":34,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":47509,"byte_end":47526,"line_start":95,"line_end":95,"column_start":51,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":47809,"byte_end":47826,"line_start":106,"line_end":106,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":48154,"byte_end":48171,"line_start":120,"line_end":120,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49380,"byte_end":49385,"line_start":160,"line_end":160,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49763,"byte_end":49769,"line_start":175,"line_end":175,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50447,"byte_end":50457,"line_start":199,"line_end":199,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50606,"byte_end":50620,"line_start":206,"line_end":206,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50947,"byte_end":50964,"line_start":215,"line_end":215,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":51348,"byte_end":51359,"line_start":227,"line_end":227,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":51508,"byte_end":51523,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":51885,"byte_end":51903,"line_start":244,"line_end":244,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/debug.rs","byte_start":59249,"byte_end":59254,"line_start":14,"line_end":14,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":10135,"byte_end":10140,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":12584,"byte_end":12590,"line_start":82,"line_end":82,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":15162,"byte_end":15167,"line_start":144,"line_end":144,"column_start":6,"column_end":11},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":17363,"byte_end":17369,"line_start":221,"line_end":221,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":18928,"byte_end":18934,"line_start":277,"line_end":277,"column_start":23,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":201},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":19095,"byte_end":19100,"line_start":285,"line_end":285,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs","byte_start":19694,"byte_end":19700,"line_start":306,"line_end":306,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":218},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":25229,"byte_end":25234,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":29384,"byte_end":29389,"line_start":218,"line_end":218,"column_start":18,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":32513,"byte_end":32519,"line_start":311,"line_end":311,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/style.rs","byte_start":36788,"byte_end":36793,"line_start":463,"line_end":463,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/difference.rs","byte_start":39270,"byte_end":39280,"line_start":23,"line_end":23,"column_start":6,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":45463,"byte_end":45480,"line_start":34,"line_end":34,"column_start":46,"column_end":63},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":292},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":47509,"byte_end":47526,"line_start":95,"line_end":95,"column_start":51,"column_end":68},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":292},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":47809,"byte_end":47826,"line_start":106,"line_end":106,"column_start":36,"column_end":53},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":48154,"byte_end":48171,"line_start":120,"line_end":120,"column_start":46,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":292},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49380,"byte_end":49385,"line_start":160,"line_end":160,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":49763,"byte_end":49769,"line_start":175,"line_end":175,"column_start":6,"column_end":12},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50447,"byte_end":50457,"line_start":199,"line_end":199,"column_start":27,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":102},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50606,"byte_end":50620,"line_start":206,"line_end":206,"column_start":10,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":50947,"byte_end":50964,"line_start":215,"line_end":215,"column_start":36,"column_end":53},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":51348,"byte_end":51359,"line_start":227,"line_end":227,"column_start":27,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":51508,"byte_end":51523,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs","byte_start":51885,"byte_end":51903,"line_start":244,"line_end":244,"column_start":48,"column_end":66},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alberto/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/debug.rs","byte_start":59249,"byte_end":59254,"line_start":14,"line_end":14,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":6824}}]}